{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/components/progress.js","webpack:///./src/components/radio.js","webpack:///./src/components/answer.js","webpack:///./src/components/bottomNav.js","webpack:///./src/pages/assessment.js"],"names":["toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","$export","P","fill","props","className","style","width","type","name","onChange","e","selected","radioid","checked","text","question","to","disabled","active","onClick","handleNav","state","result","resultcontent","content","Assessment","handleAnswer","val","scoreArray","score","slice","setState","isActive","calcPercentage","partialVal","totalVal","calcTotal","reduce","a","b","handleResult","total","dir","currentQuestion","back","next","progress","render","Q","Content","questions","answers","map","answer","key","Math","round","Component"],"mappings":"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","file":"component---src-pages-assessment-js-4c4cfdb98a5f18294c40.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import React from \"react\"\nimport \"../assets/scss/main.scss\"\nexport default (props) =>\n\n    <section className=\"progress-wrapper\">\n        <div className=\"progress\" style={{ width: `${props.fill}%` }}>\n\n        </div>\n    </section>","import React from \"react\"\nimport \"../assets/scss/main.scss\"\nexport default (props) =>\n\n    <input\n        type=\"radio\"\n        name={`${props.name}`}\n        value={props.value}\n        className=\"form-check-input\"\n        onChange={e => props.selected(e, props.value, props.radioid)}\n        checked={props.checked === props.radioid}\n    />\n","import React from \"react\"\nimport \"../assets/scss/main.scss\"\nimport Radio from \"./radio.js\";\nexport default (props) =>\n\n    <div className=\"answer\">\n        <Radio name={props.name} selected={props.selected} value={props.value} checked={props.checked} radioid={props.radioid} selected={props.selected} />\n        <p>{props.text}</p>\n    </div>","import React from \"react\"\nimport \"../assets/scss/main.scss\"\nimport { Link } from \"gatsby\"\nexport default (props) =>\n\n    <nav>\n        {props.question === 0 ?\n            <Link\n                to={'/'}\n                className=\"cta back\"\n                disabled={props.active}\n                onClick={e => props.handleNav('b')}>\n                Intro\n            </Link>\n            :\n            <button\n                className=\"cta back\"\n                onClick={e => props.handleNav('b')}>\n                Back\n            </button>\n        }\n        {\n            props.question === 14 ?\n                <Link\n                    to={'/results'}\n                    state={{ result: props.result, resultcontent: props.content }}\n                    className=\"cta\"\n                    disabled={props.active}\n                    onClick={e => props.handleNav('n')}>\n                    Results\n                </Link>\n                :\n                <button\n                    className=\"cta\"\n                    disabled={props.active}\n                    onClick={e => props.handleNav('n')}>\n                    Next\n                </button>\n        }\n    </nav>\n","import React, { Component } from \"react\"\n\nimport \"../assets/scss/main.scss\"\nimport Layout from \"../components/layout.js\"\nimport Progress from \"../components/progress.js\"\nimport Answer from \"../components/answer.js\"\nimport Content from \"../content/content.json\";\nimport BottomNav from \"../components/bottomNav.js\"\n\n\nclass Assessment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            question: 0,\n            score: [],\n            total: 0,\n            progress: 0,\n            isActive: !false,\n            checked: null\n        };\n    }\n\n\n\n    handleAnswer = (e, val, radioid) => {\n        let question = this.state.question;\n        let score = this.state.score;\n        let scoreArray = score.slice();\n        scoreArray[question] = val;\n        this.setState({\n            score: scoreArray,\n            isActive: !true,\n            checked: radioid,\n        })\n    }\n\n    calcPercentage = (partialVal, totalVal) => {\n        return (100 * partialVal) / totalVal;\n    }\n\n    calcTotal = (score) => {\n        score.reduce(function (a, b) { return a + b; }, 0)\n    }\n\n    handleResult = () => {\n        let result = this.state.total;\n        if (result >= 0 && result <= 15) {\n            return 0;\n        } else if (result >= 16 && result <= 25) {\n            return 1;\n        } else if (result >= 26 && result <= 40) {\n            return 2;\n        } else if (result >= 41 && result <= 60) {\n            return 3;\n        }\n\n    }\n\n    handleNav = (dir) => {\n        let currentQuestion = this.state.question;\n        let back = currentQuestion - 1;\n        let next = currentQuestion + 1;\n\n        if (dir === 'b' && currentQuestion > 0) {\n            this.setState({\n                question: back,\n                progress: this.calcPercentage(currentQuestion - 1, 15),\n                checked: null\n            })\n        } else if (dir === 'n' && next < 15) {\n            this.setState({\n                question: next,\n                progress: this.calcPercentage(currentQuestion + 1, 15),\n                isActive: !false,\n                total: this.state.score.reduce(function (a, b) { return a + b; }, 0),\n                result: this.handleResult(),\n                checked: null\n            })\n        } else {\n            return (false);\n        }\n\n    }\n\n    render() {\n        const Q = Content.questions[this.state.question];\n\n        return (\n            <Layout>\n                <Progress fill={this.state.progress} />\n                <article className=\"container--assessment\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12 col-md-3 left\" />\n                            <div className=\"col-sm-12 col-md-9 right\">\n                                <p className=\"question\">{Q.question}</p>\n                                {Q.answers.map((answer, index) => (\n                                    <Answer key={index} radioid={this.state.question + '-' + index} value={answer.val} text={answer.text} selected={this.handleAnswer} checked={this.state.checked} name={'question-' + this.state.question} />\n                                ))}\n                                <BottomNav question={this.state.question} handleNav={this.handleNav} result={Math.round((this.state.total / 60) * 100)} content={this.handleResult()} active={this.state.isActive} />\n                            </div>\n                        </div>\n                    </div>\n                </article>\n            </Layout >\n        );\n    }\n}\n\nexport default Assessment;\n\n"],"sourceRoot":""}